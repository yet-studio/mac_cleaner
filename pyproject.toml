[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[project]
name = "mac_cleaner"
version = "0.1.0"
description = "A professional-grade system cleaning tool for macOS"
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
    "psutil>=5.9.0",    # System and process utilities
    "rich>=13.0.0",     # Rich text and beautiful formatting
    "pydantic>=2.0.0",  # Data validation
    "click>=8.0.0",     # Command line interface
]

[project.optional-dependencies]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
    "hypothesis>=6.75.3",
    "coverage[toml]>=7.2.0"
]

dev = [
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pylint>=2.17.0",
    "pre-commit>=3.3.0"
]

docs = [
    "sphinx>=7.0.0",
    "sphinx-rtd-theme",
    "mkdocs-material",
    "mkdocstrings[python]"
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "--cov=src --cov-report=term-missing --cov-report=html --cov-fail-under=80"

[tool.coverage.run]
branch = false
source = ["src"]
omit = ["tests/*", "**/__init__.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "pass",
    "raise ImportError",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

[tool.black]
line-length = 88
target-version = ["py39"]

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.hatch.build.targets.wheel]
packages = ["src"]
